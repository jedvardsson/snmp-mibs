#-MIBFILE: LEFTHAND-NETWORKS-NSM-NOTIFICATION-MIB.mib

LEFTHAND-NETWORKS-NSM-NOTIFICATION-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

lefthandnetworks OBJECT IDENTIFIER ::= { enterprises 9804 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnModules OBJECT IDENTIFIER ::= { lefthandnetworksRegistrations 1 }
lefthandnetworksProducts OBJECT IDENTIFIER ::= { lefthandnetworks 3 }
lhnNsm OBJECT IDENTIFIER ::= { lefthandnetworksProducts 1 }
lefthandnetworksRegistrations OBJECT IDENTIFIER ::= { lefthandnetworks 2 }
lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }
lhnNsmObjects OBJECT IDENTIFIER ::= { lhnNsmDevices 2 }
lhnNsmNotification OBJECT IDENTIFIER ::= { lhnNsmObjects 15 }
lhnNsmEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 0 }
lhnNsmOldNotification OBJECT IDENTIFIER ::= { lhnNsmObjects 13 }
lhnNsmOldEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 3 }
lhnNsmNotificationModule OBJECT IDENTIFIER ::= { lhnModules 15 }

lhnNsmDevices OBJECT IDENTIFIER ::= { lhnNsm 1 }

lhnNsmEvents OBJECT IDENTIFIER ::= { lhnNsmDevices 0 }

lhnNsmNotificationModuleConformance OBJECT IDENTIFIER ::= { lhnNsmNotificationModule 1 }

lhnNsmNotificationModuleCompliances OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleConformance 1 }

lhnNsmNotificationModuleGroups OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleConformance 2 }

lefthandNetworksNsmNotificationGroup OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleGroups 1 }

lefthandNetworksNsmNotificationMibAllNotifications OBJECT IDENTIFIER ::= { lhnNsmNotificationModuleGroups 2 }

notificationMessageCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of notification messages available in the history."
	::= { lhnNsmNotification 1 }


notificationMessageTable OBJECT-TYPE
	SYNTAX SEQUENCE OF NotificationMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of the last 100 notifications for the NSM.
The number of entries is given by messageNotificationCount."
	::= { lhnNsmNotification 2 }


notificationMessageEntry OBJECT-TYPE
	SYNTAX NotificationMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A row of notification message information.
The information contained in each row is dependant on the trap type
and the event that caused the trap.  Not all NotificationMessageEntry
objects will have values."
	INDEX { notificationMessageIndex  }

	::= { notificationMessageTable 1 }

notificationMessageEntry ::=
	SEQUENCE {
		notificationMessageIndex Unsigned32,
		message DisplayString,
		messageTime DateAndTime,
		eventID DisplayString,
		severity INTEGER,
		hostname DisplayString,
		primaryIP DisplayString,
		mac DisplayString,
		serialNumber DisplayString,
		modelName DisplayString,
		productName DisplayString,
		productID DisplayString,
		hpim TruthValue,
		softwareVersion DisplayString,
		managementGroupVersion DisplayString,
		managementGroupSerialNumber DisplayString,
		managementGroup DisplayString,
		cluster DisplayString,
		site DisplayString,
		componentName DisplayString,
		systemName DisplayString,
		logicalName DisplayString,
		componentState DisplayString,
		componentModel DisplayString,
		componentSerialNumber DisplayString,
		componentFirmwareVersion DisplayString,
		componentHardwareVersion DisplayString,
		driverVersion DisplayString,
		biosVersion DisplayString,
		raidConfiguration DisplayString,
		diskInterface DisplayString,
		diskCapacity Integer32,
		raidState DisplayString,
		parityInitStatus DisplayString,
		healthState DisplayString,
		bbuState DisplayString,
		cacheState DisplayString,
		linkState DisplayString,
		vipState DisplayString,
		maintenanceMode DisplayString,
		minFanSpeed Integer32,
		fanSpeed Gauge32,
		highTemperatureLimit Integer32,
		temperatureState DisplayString,
		temperature Gauge32,
		highVoltageLimit Integer32,
		lowVoltageLimit Integer32,
		voltage Gauge32,
		utilization Gauge32,
		latency Gauge32,
		memoryUtilization Gauge32,
		memoryConfig Integer32,
		cpuUtilization Gauge32,
		cpuConfig Integer32,
		diskSpeed DisplayString,
		licenseState DisplayString,
		utilizationState DisplayString,
		latencyState DisplayString,
		serverVIPAddress DisplayString,
		serverVIPState DisplayString,
		replicationState DisplayString,
		snapshotState DisplayString,
		snapshotSchedState DisplayString
		}

notificationMessageIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The index for the notificationMessageTable table."
	::= { notificationMessageEntry 1 }


message OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The notification message."
	::= { notificationMessageEntry 2 }


messageTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The time the notification was sent."
	::= { notificationMessageEntry 3 }


eventID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The event ID in symbolic format."
	::= { notificationMessageEntry 4 }


severity OBJECT-TYPE
	SYNTAX INTEGER {
	critical(0),
	warning(1),
	info(2)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The event severity."
	::= { notificationMessageEntry 5 }


hostname OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The NSM hostname."
	::= { notificationMessageEntry 6 }


primaryIP OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The primary IP address."
	::= { notificationMessageEntry 7 }


mac OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The MAC address of the primary IP address."
	::= { notificationMessageEntry 8 }


serialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The chassis serial number."
	::= { notificationMessageEntry 9 }


modelName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system model name."
	::= { notificationMessageEntry 10 }


productName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The OEM product name."
	::= { notificationMessageEntry 11 }


productID OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The OEM product ID."
	::= { notificationMessageEntry 12 }


hpim OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "HP Insight Manager SNMP agent installed on NSM"
	::= { notificationMessageEntry 13 }


softwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The SAN/iQ software version"
	::= { notificationMessageEntry 14 }


managementGroupVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group version."
	::= { notificationMessageEntry 15 }


managementGroupSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group serial number."
	::= { notificationMessageEntry 16 }


managementGroup OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group name."
	::= { notificationMessageEntry 17 }


cluster OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cluster name."
	::= { notificationMessageEntry 18 }


site OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The site the cluster is in."
	::= { notificationMessageEntry 19 }


componentName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component name."
	::= { notificationMessageEntry 20 }


systemName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system hostname."
	::= { notificationMessageEntry 21 }


logicalName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The logical name for the component."
	::= { notificationMessageEntry 22 }


componentState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component state."
	::= { notificationMessageEntry 23 }


componentModel OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component model."
	::= { notificationMessageEntry 24 }


componentSerialNumber OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component serial number."
	::= { notificationMessageEntry 25 }


componentFirmwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component firmware version."
	::= { notificationMessageEntry 26 }


componentHardwareVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component hardware version."
	::= { notificationMessageEntry 27 }


driverVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The driver version."
	::= { notificationMessageEntry 28 }


biosVersion OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BIOS version."
	::= { notificationMessageEntry 29 }


raidConfiguration OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID configuration."
	::= { notificationMessageEntry 30 }


diskInterface OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk interface type."
	::= { notificationMessageEntry 31 }


diskCapacity OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk capacity."
	::= { notificationMessageEntry 32 }


raidState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID state."
	::= { notificationMessageEntry 33 }


parityInitStatus OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The RAID Parity Initialization status."
	::= { notificationMessageEntry 34 }


healthState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk health state."
	::= { notificationMessageEntry 35 }


bbuState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The BBU state."
	::= { notificationMessageEntry 36 }


cacheState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cache state."
	::= { notificationMessageEntry 37 }


linkState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The link state."
	::= { notificationMessageEntry 38 }


vipState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The cluster VIP state."
	::= { notificationMessageEntry 39 }


maintenanceMode OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The management group maintenance mode."
	::= { notificationMessageEntry 40 }


minFanSpeed OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The minimal fan speed."
	::= { notificationMessageEntry 41 }


fanSpeed OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The fan speed."
	::= { notificationMessageEntry 42 }


highTemperatureLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The high temperature limit."
	::= { notificationMessageEntry 43 }


temperatureState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component temperature state."
	::= { notificationMessageEntry 44 }


temperature OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The component temperature."
	::= { notificationMessageEntry 45 }


highVoltageLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The high voltage limit."
	::= { notificationMessageEntry 46 }


lowVoltageLimit OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The low voltage limit."
	::= { notificationMessageEntry 47 }


voltage OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The voltage."
	::= { notificationMessageEntry 48 }


utilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The rescource utilization."
	::= { notificationMessageEntry 49 }


latency OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage server latency."
	::= { notificationMessageEntry 50 }


memoryUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The memory utilization."
	::= { notificationMessageEntry 51 }


memoryConfig OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The system memory configuration."
	::= { notificationMessageEntry 52 }


cpuUtilization OBJECT-TYPE
	SYNTAX Gauge
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The CPU utilization."
	::= { notificationMessageEntry 53 }


cpuConfig OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The number of CPU cores."
	::= { notificationMessageEntry 54 }


diskSpeed OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The disk interface speed."
	::= { notificationMessageEntry 55 }


licenseState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The feature license state."
	::= { notificationMessageEntry 56 }


utilizationState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The utilization state."
	::= { notificationMessageEntry 57 }


latencyState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage server latency state."
	::= { notificationMessageEntry 58 }


serverVIPAddress OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VIP address."
	::= { notificationMessageEntry 59 }


serverVIPState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VIP state."
	::= { notificationMessageEntry 60 }


replicationState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The volume/snapshot replication state."
	::= { notificationMessageEntry 61 }


snapshotState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The snapshot state."
	::= { notificationMessageEntry 62 }


snapshotSchedState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The snapshot schedule state."
	::= { notificationMessageEntry 63 }


notificationOldMessageCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "number of notification messages
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNsmOldNotification 1 }


notificationOldMessageTable OBJECT-TYPE
	SYNTAX SEQUENCE OF NotificationOldMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of notification messages for the NSM.
The number of entries is given by notificationMessageCount.
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { lhnNsmOldNotification 2 }


notificationOldMessageEntry OBJECT-TYPE
	SYNTAX NotificationOldMessageEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "row of notification message parameters
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	INDEX { notificationIndex  }

	::= { notificationOldMessageTable 1 }

notificationOldMessageEntry ::=
	SEQUENCE {
		notificationIndex Unsigned32,
		notificationMessage DisplayString,
		notificationTime DateAndTime
		}

notificationIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "notification message index
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { notificationOldMessageEntry 1 }


notificationMessage OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "notification message contents
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { notificationOldMessageEntry 2 }


notificationTime OBJECT-TYPE
	SYNTAX DateAndTime
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "time notification occurred
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= { notificationOldMessageEntry 3 }


lhnNsmNotificationGeneric TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site }
DESCRIPTION "A generic system event was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 1


lhnNsmNotificationBackplane TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, componentSerialNumber, componentFirmwareVersion }
DESCRIPTION "An event for the system backplane was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 2


lhnNsmNotificationController TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, componentModel, componentSerialNumber, componentHardwareVersion, componentFirmwareVersion, driverVersion, biosVersion, cacheState, bbuState }
DESCRIPTION "An event for the RAID controller was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 3


lhnNsmNotificationRAID TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentState, raidConfiguration, parityInitStatus }
DESCRIPTION "An event for the system RAID was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 4


lhnNsmNotificationDisk TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, componentModel, componentSerialNumber, componentFirmwareVersion, diskInterface, diskCapacity, healthState, temperatureState, temperature, diskSpeed }
DESCRIPTION "An event for a disk was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 5


lhnNsmNotificationBootDevice TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState }
DESCRIPTION "An event for a boot device was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 6


lhnNsmNotificationFan TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, minFanSpeed, fanSpeed }
DESCRIPTION "An event for a fan was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 7


lhnNsmNotificationTemperature TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, highTemperatureLimit, temperature }
DESCRIPTION "An event for a temperature sensor was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 8


lhnNsmNotificationPowerSupply TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState }
DESCRIPTION "An event for a power supply was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 9


lhnNsmNotificationVoltage TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, highVoltageLimit, lowVoltageLimit, voltage }
DESCRIPTION "An event for a voltage sensor was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 10


lhnNsmNotificationNetwork TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, systemName, logicalName, linkState }
DESCRIPTION "An event for the network was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 11


lhnNsmNotificationMemory TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, memoryConfig, memoryUtilization }
DESCRIPTION "An event for the system memory was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 12


lhnNsmNotificationCPU TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, cpuConfig, cpuUtilization }
DESCRIPTION "An event for the CPU was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 13


lhnNsmNotificationLogging TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, utilization }
DESCRIPTION "An event for the log partition was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 14


lhnNsmNotificationManagementGroup TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, maintenanceMode, licenseState }
DESCRIPTION "An event for the management group was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 15


lhnNsmNotificationRemoteManagementGroup TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState }
DESCRIPTION "An event for a remote management group was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 16


lhnNsmNotificationCluster TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, utilization, vipState, utilizationState }
DESCRIPTION "An event for the cluster was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 17


lhnNsmNotificationStorageServer TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, latency, latencyState, serverVIPAddress, serverVIPState }
DESCRIPTION "An event for the storage server was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 18


lhnNsmNotificationRemoteCopy TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, replicationState }
DESCRIPTION "An event for a remote copy operation was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 19


lhnNsmNotificationVolume TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState }
DESCRIPTION "An event for a volume was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 20


lhnNsmNotificationSnapshot TRAP-TYPE
	ENTERPRISE lhnNsmDevices
	VARIABLES { message, messageTime, eventID, severity, hostname, primaryIP, mac, serialNumber, modelName, productName, productID, hpim, softwareVersion, managementGroupVersion, managementGroupSerialNumber, managementGroup, cluster, site, componentName, componentState, snapshotState }
DESCRIPTION "An event for a snapshot was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Added in SAN/iQ 8.5"
	::= 21


userNotification TRAP-TYPE
	ENTERPRISE lhnNsmOldEvents
	VARIABLES { notificationMessage, notificationTime }
DESCRIPTION "A system event was generated.
The user chose to be notified of this condition
via SNMP. A table of messages exists which stores
all the notifications issued. This trap will
contain the OID referring to the corresponding
message stored in this table.
Used by SAN/iQ 8.1 and earlier.
Obsolete in SAN/iQ 8.5.
Marked as current to increase compatability with some SNMP clients."
	::= 1


END

