#-MIBFILE: vc-domain-mib.mib

HPVC-MIB DEFINITIONS ::= BEGIN


mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

VcManagedStatus ::=
	INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}

VcDomainModuleRole ::=
	INTEGER {
	unintegrated(1),
	primaryProtected(2),
	primaryUnprotected(3),
	standby(4),
	other(5)
	}

VcModuleType ::=
	INTEGER {
	vcModuleEnet(1),
	vcModuleFC(2),
	vcModuleOther(3)
	}

VcPortType ::=
	INTEGER {
	vcEnetPhysicalPort(1),
	vcEnetLogicallPort(2),
	vcFCPort(3)
	}

hp OBJECT IDENTIFIER ::= { enterprises 11 }

hpSysMgt OBJECT IDENTIFIER ::= { hp 5 }

hpEmbeddedServerMgt OBJECT IDENTIFIER ::= { hpSysMgt 7 }

hpModuleMgmtProc OBJECT IDENTIFIER ::= { hpEmbeddedServerMgt 5 }

virtualConnect OBJECT IDENTIFIER ::= { hpModuleMgmtProc 2 }

vcDomainMIB OBJECT IDENTIFIER ::= { virtualConnect 1 }

vcDomainMIBObjects OBJECT IDENTIFIER ::= { vcDomainMIB 1 }

vcDomain OBJECT IDENTIFIER ::= { vcDomainMIBObjects 1 }

vcEnclosure OBJECT IDENTIFIER ::= { vcDomainMIBObjects 2 }

vcModule OBJECT IDENTIFIER ::= { vcDomainMIBObjects 3 }

vcPort OBJECT IDENTIFIER ::= { vcDomainMIBObjects 4 }

vcPhysicalServer OBJECT IDENTIFIER ::= { vcDomainMIBObjects 5 }

vcEnetNetwork OBJECT IDENTIFIER ::= { vcDomainMIBObjects 6 }

vcFcFabric OBJECT IDENTIFIER ::= { vcDomainMIBObjects 7 }

vcProfile OBJECT IDENTIFIER ::= { vcDomainMIBObjects 8 }

vcEnetNetworkVcPortMap OBJECT IDENTIFIER ::= { vcDomainMIBObjects 9 }

vcFcFabricVcPortMap OBJECT IDENTIFIER ::= { vcDomainMIBObjects 10 }

vcProfileNetworkMap OBJECT IDENTIFIER ::= { vcDomainMIBObjects 11 }

vcProfileFcFabricMap OBJECT IDENTIFIER ::= { vcDomainMIBObjects 12 }

vcDomainName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The Virtual Connect Domain name."
	::= { vcDomain 1 }


vcDomainManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The overall domain status of the Virtual Connect Domain."
	::= { vcDomain 2 }


vcDomainPrimaryAddressType OBJECT-TYPE
	SYNTAX TransportAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport address type used to address the primary VC module."
	::= { vcDomain 3 }


vcDomainPrimaryAddress OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the primary VC module. The address format is determined
by the vcDomainPrimaryAddressType object."
	::= { vcDomain 4 }


vcDomainCheckpointValid OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object returns 'true' when the VC configuration has been 
successfully checkpointed."
	::= { vcDomain 5 }


vcDomainLastCheckpointTime OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The timestamp of the last attempt to update the configuration state of the domain."
	::= { vcDomain 6 }


vcDomainStackingLinkRedundant OBJECT-TYPE
	SYNTAX TruthValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The overall stacking link connection redundancy status.
This value indicates whether all VC-Enet modules will remain
connected to each other with the loss of a link."
	::= { vcDomain 7 }


vcEnclosureTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcEnclosureEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of enclosures in the Virtual Connect Domain."
	::= { vcEnclosure 1 }


vcEnclosureEntry OBJECT-TYPE
	SYNTAX VcEnclosureEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing information about a particular enclosure."
	INDEX { vcEnclosureIndex  }

	::= { vcEnclosureTable 1 }

vcEnclosureEntry ::=
	SEQUENCE {
		vcEnclosureIndex INTEGER,
		vcEnclosureName OCTET STRING,
		vcEnclosureManagedStatus VcManagedStatus,
		vcEnclosureAddressType TransportAddressType,
		vcEnclosureAddress TransportAddress,
		vcEnclosureUUID SnmpAdminString
		}

vcEnclosureIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the enclosure table."
	::= { vcEnclosureEntry 1 }


vcEnclosureName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Administratively assigned name for the enclosure."
	::= { vcEnclosureEntry 2 }


vcEnclosureManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Managed status of the enclusure."
	::= { vcEnclosureEntry 3 }


vcEnclosureAddressType OBJECT-TYPE
	SYNTAX TransportAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport address type used to address the enclosure's management entity."
	::= { vcEnclosureEntry 4 }


vcEnclosureAddress OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the enclosure's management entity.
The address format is determined by the vcEnclosureAddressType object."
	::= { vcEnclosureEntry 5 }


vcEnclosureUUID OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "UUID value for the enclosure."
	::= { vcEnclosureEntry 6 }


vcModuleTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of VC interconnect modules in the Virtual Connect Domain."
	::= { vcModule 1 }


vcModuleEntry OBJECT-TYPE
	SYNTAX VcModuleEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry containing information about a single interconnect module."
	INDEX { vcModuleIndex  }

	::= { vcModuleTable 1 }

vcModuleEntry ::=
	SEQUENCE {
		vcModuleIndex INTEGER,
		vcModuleType VcModuleType,
		vcModuleManagedStatus VcManagedStatus,
		vcModulePartNumber SnmpAdminString,
		vcModuleSerialNumber SnmpAdminString,
		vcModuleProductName SnmpAdminString,
		vcModuleFwRev SnmpAdminString,
		vcModuleEnclosurePointer RowPointer,
		vcModuleLocation Unsigned32,
		vcModuleAddressType TransportAddressType,
		vcModuleAddress TransportAddress,
		vcModuleID SnmpAdminString
		}

vcModuleIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcModuleTable."
	::= { vcModuleEntry 1 }


vcModuleType OBJECT-TYPE
	SYNTAX INTEGER {
	vcModuleEnet(1),
	vcModuleFC(2),
	vcModuleOther(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VC interconnect module type."
	::= { vcModuleEntry 2 }


vcModuleManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The overall managed status of the vcEnetModule."
	::= { vcModuleEntry 3 }


vcModulePartNumber OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The part number of the VC module."
	::= { vcModuleEntry 4 }


vcModuleSerialNumber OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The serial number of the VC module."
	::= { vcModuleEntry 5 }


vcModuleProductName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product name of the VC module."
	::= { vcModuleEntry 6 }


vcModuleFwRev OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The revision number of the firmware running on this Enet module."
	::= { vcModuleEntry 7 }


vcModuleEnclosurePointer OBJECT-TYPE
	SYNTAX RowPointer
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A reference pointer into vcEnclosureTable that contains enclosure
information for the enclosure associated with this vcModule."
	::= { vcModuleEntry 8 }


vcModuleLocation OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The interconnect bay number associated with this VC module."
	::= { vcModuleEntry 9 }


vcModuleAddressType OBJECT-TYPE
	SYNTAX TransportAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport address type used to address the EnetModule's management entity."
	::= { vcModuleEntry 10 }


vcModuleAddress OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the SNMP agent on the VC module.
The address format is determined by the vcModuleAddressType object."
	::= { vcModuleEntry 11 }


vcModuleID OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Unique identifier for the VC module. This object contains reports the
following values,
- MAC address for Enet module.
- WWN address for FC modules."
	::= { vcModuleEntry 12 }


vcPortTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcPortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of ports in the Virtual Connect Domain. Ports include
physical network ports (uplinks, server links, stacking links,
and unconnected), logical network ports (Flex-10 subports on downlinks),
and Fibre Channel ports (uplinks and downlinks)."
	::= { vcPort 1 }


vcPortEntry OBJECT-TYPE
	SYNTAX VcPortEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry continaing information about a particular ethernet port."
	INDEX { vcPortIndex  }

	::= { vcPortTable 1 }

vcPortEntry ::=
	SEQUENCE {
		vcPortIndex INTEGER,
		vcPortType VcPortType,
		vcPortManagedStatus VcManagedStatus,
		vcPortManagerAddressType TransportAddressType,
		vcPortManagerAddress TransportAddress,
		vcPortContainerPointer RowPointer,
		vcPortPhysicalPortPointer RowPointer
		}

vcPortIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcPort table."
	::= { vcPortEntry 1 }


vcPortType OBJECT-TYPE
	SYNTAX INTEGER {
	vcEnetPhysicalPort(1),
	vcEnetLogicallPort(2),
	vcFCPort(3)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Indicates the VC port type."
	::= { vcPortEntry 2 }


vcPortManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Managed status of the vcPort."
	::= { vcPortEntry 3 }


vcPortManagerAddressType OBJECT-TYPE
	SYNTAX TransportAddressType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The transport address type used to address the EnetModule's management entity."
	::= { vcPortEntry 4 }


vcPortManagerAddress OBJECT-TYPE
	SYNTAX TransportAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The address of the SNMP agent on the VC module.
The address format is determined by the vcPortManagerAddressType object."
	::= { vcPortEntry 5 }


vcPortPhysicalPortPointer OBJECT-TYPE
	SYNTAX RowPointer
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "reference to the table entry for the physical port in the containing
module's MIB. The referenced table depends on the port type:
vcEnetPhysicalPort: ifTable
vcEnetLogicalPort : ifTable of corresponding physical port
vcFCPort          : connUnitPortTable
"
	::= { vcPortEntry 6 }


vcPortContainerPointer OBJECT-TYPE
	SYNTAX RowPointer
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "reference to the table entry in the VC Domain MIB for the component
which contains this port:
vcEnetPhysicalPort: vcModuleTable
vcEnetLogicalPort : vcPortTable (for the physical port containing
this Flex-10 subport)
vcFCPort: vcModuleTable
"
	::= { vcPortEntry 7 }


vcPhysicalServerTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcPhysicalServerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of server bay devices in the Virtual Connect Domain."
	::= { vcPhysicalServer 1 }


vcPhysicalServerEntry OBJECT-TYPE
	SYNTAX VcPhysicalServerEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "VC PhysicalServer bay (server bay) table entry."
	INDEX { vcPhysicalServerIndex  }

	::= { vcPhysicalServerTable 1 }

vcPhysicalServerEntry ::=
	SEQUENCE {
		vcPhysicalServerIndex INTEGER,
		vcPhysicalServerEnclosureIndex INTEGER,
		vcPhysicalServerManagedStatus VcManagedStatus,
		vcPhysicalServerPartNumber SnmpAdminString,
		vcPhysicalServerSerialNumber SnmpAdminString,
		vcPhysicalServerProductName SnmpAdminString,
		vcPhysicalServerLocation Unsigned32
		}

vcPhysicalServerIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcPhysicalServer table."
	::= { vcPhysicalServerEntry 1 }


vcPhysicalServerEnclosureIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the enclosure in vcEnclosureTable containing this server."
	::= { vcPhysicalServerEntry 2 }


vcPhysicalServerManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Managed status of the vcPhysicalServer."
	::= { vcPhysicalServerEntry 3 }


vcPhysicalServerPartNumber OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The part number of the Physical Server."
	::= { vcPhysicalServerEntry 4 }


vcPhysicalServerSerialNumber OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The serial number of the Physical Server."
	::= { vcPhysicalServerEntry 5 }


vcPhysicalServerProductName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The product name of the Physical Server."
	::= { vcPhysicalServerEntry 6 }


vcPhysicalServerLocation OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The device bay number of the bay in which this server is installed."
	::= { vcPhysicalServerEntry 7 }


vcFcFabricTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcFcFabricEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of FC fabrics in the Virtual Connect Domain."
	::= { vcFcFabric 1 }


vcFcFabricEntry OBJECT-TYPE
	SYNTAX VcFcFabricEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a single fabric."
	INDEX { vcFcFabricIndex  }

	::= { vcFcFabricTable 1 }

vcFcFabricEntry ::=
	SEQUENCE {
		vcFcFabricIndex INTEGER,
		vcFcFabricName SnmpAdminString,
		vcFcFabricManagedStatus VcManagedStatus
		}

vcFcFabricIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcFcFabric table."
	::= { vcFcFabricEntry 1 }


vcFcFabricName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Administratively assigned name for the fabric."
	::= { vcFcFabricEntry 2 }


vcFcFabricManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The overall managed status of the vcFcFabric."
	::= { vcFcFabricEntry 3 }


vcEnetNetworkTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcEnetNetworkEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of ethernet networks in the Virtual Connect Domain."
	::= { vcEnetNetwork 1 }


vcEnetNetworkEntry OBJECT-TYPE
	SYNTAX VcEnetNetworkEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry contianing information about a single network."
	INDEX { vcEnetNetworkIndex  }

	::= { vcEnetNetworkTable 1 }

vcEnetNetworkEntry ::=
	SEQUENCE {
		vcEnetNetworkIndex INTEGER,
		vcEnetNetworkName SnmpAdminString,
		vcEnetNetworkManagedStatus VcManagedStatus,
		vcEnetNetworkUplinkVlanId Unsigned32
		}

vcEnetNetworkIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcEnetNetwork table."
	::= { vcEnetNetworkEntry 1 }


vcEnetNetworkName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Administratively assigned name for the network."
	::= { vcEnetNetworkEntry 2 }


vcEnetNetworkManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The overall managed status of the vcEnetNetwork."
	::= { vcEnetNetworkEntry 3 }


vcEnetNetworkUplinkVlanId OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The VLAN ID for the external uplink network. This value is
set to 0 if no uplink VLAN ID is assigned."
	::= { vcEnetNetworkEntry 4 }


vcProfileTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcProfileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table of Server profiles in the Virtual Connect Domain."
	::= { vcProfile 1 }


vcProfileEntry OBJECT-TYPE
	SYNTAX VcProfileEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a single server profile."
	INDEX { vcProfileIndex  }

	::= { vcProfileTable 1 }

vcProfileEntry ::=
	SEQUENCE {
		vcProfileIndex INTEGER,
		vcProfileName SnmpAdminString,
		vcProfileManagedStatus VcManagedStatus,
		vcProfilePhysicalServerIndex Unsigned32,
		vcProfileLogicalSerialNumber SnmpAdminString
		}

vcProfileIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for the vcProfile table."
	::= { vcProfileEntry 1 }


vcProfileName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A globally-unique, administratively assigned name for the
vcProfilek."
	::= { vcProfileEntry 2 }


vcProfileManagedStatus OBJECT-TYPE
	SYNTAX INTEGER {
	unknown(1),
	normal(2),
	warning(3),
	minor(4),
	major(5),
	critical(6),
	disabled(7),
	info(8)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Managed status of the vcProfile."
	::= { vcProfileEntry 3 }


vcProfilePhysicalServerIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value of assigned physical server from  vcPhysicalServer table.
The value is set to 0 if the profile is unassigned."
	::= { vcProfileEntry 4 }


vcProfileLogicalSerialNumber OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A logical server serial number to this profile. If the value is
empty, the server will use hardware serial number."
	::= { vcProfileEntry 5 }


vcEnetNetworkVcPortMapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcEnetNetworkVcPortMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists a mapping of networks and associated ports
The objective of this table is to provide a mechanism to 
access all EnetPorts associated with a given EnetNetwork.
The second index to the table vcPortIndex can be used
access port information for a given port"
	::= { vcEnetNetworkVcPortMap 1 }


vcEnetNetworkVcPortMapEntry OBJECT-TYPE
	SYNTAX VcEnetNetworkVcPortMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a VcPort in Enet Network."
	INDEX { vcEnetNetworkVcPortMapNetworkIndex , vcEnetNetworkVcPortMapVcPortIndex }

	::= { vcEnetNetworkVcPortMapTable 1 }

vcEnetNetworkVcPortMapEntry ::=
	SEQUENCE {
		vcEnetNetworkVcPortMapNetworkIndex INTEGER,
		vcEnetNetworkVcPortMapVcPortIndex INTEGER
		}

vcEnetNetworkVcPortMapNetworkIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for network entry. This index value must correspond to
vcEnetNetworkIndex from vcEnetNetworkTable."
	::= { vcEnetNetworkVcPortMapEntry 1 }


vcEnetNetworkVcPortMapVcPortIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for VcPort entry. This index value must correspond to
vcPortIndex from vcPortTable."
	::= { vcEnetNetworkVcPortMapEntry 2 }


vcFcFabricVcPortMapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcFcFabricVcPortMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists a mapping of fabics and associated VcPorts.
The objective of this table is to provide a mechanism to 
access all VcPorts associated with a given FcFabric.
The second index to the table vcVcPortIndex can be used
access VcPort information for a given VcPort"
	::= { vcFcFabricVcPortMap 1 }


vcFcFabricVcPortMapEntry OBJECT-TYPE
	SYNTAX VcFcFabricVcPortMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a single fabric."
	INDEX { vcFcFabricVcPortMapFcFabricIndex , vcFcFabricVcPortMapVcPortIndex }

	::= { vcFcFabricVcPortMapTable 1 }

vcFcFabricVcPortMapEntry ::=
	SEQUENCE {
		vcFcFabricVcPortMapFcFabricIndex INTEGER,
		vcFcFabricVcPortMapVcPortIndex INTEGER
		}

vcFcFabricVcPortMapFcFabricIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for vcFabric entry. This index value must correspond to
vcFcFabricIndex from vcFcFabricTable."
	::= { vcFcFabricVcPortMapEntry 1 }


vcFcFabricVcPortMapVcPortIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for VcPort entry. This index value must correspond to
vcPortIndex from vcPortTable."
	::= { vcFcFabricVcPortMapEntry 2 }


vcProfileNetworkMapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcProfileNetworkMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists a mapping of profiles and associated ports.
The objective of this table is to provide a mechanism to 
access all Networks assigned to a given vcProfile.
The second index to the table vcNetworkIndex can be used
access network information for a given network"
	::= { vcProfileNetworkMap 1 }


vcProfileNetworkMapEntry OBJECT-TYPE
	SYNTAX VcProfileNetworkMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a single network."
	INDEX { vcProfileNetworkMapProfileIndex , vcProfileNetworkMapConnectionIndex }

	::= { vcProfileNetworkMapTable 1 }

vcProfileNetworkMapEntry ::=
	SEQUENCE {
		vcProfileNetworkMapProfileIndex INTEGER,
		vcProfileNetworkMapConnectionIndex INTEGER,
		vcProfileNetworkMapNetworkIndex INTEGER
		}

vcProfileNetworkMapProfileIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for profile entry. This index value must correspond to
vcProfileIndex from vcProfileTable."
	::= { vcProfileNetworkMapEntry 1 }


vcProfileNetworkMapConnectionIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Ethernet network connection number associated with this mapping."
	::= { vcProfileNetworkMapEntry 2 }


vcProfileNetworkMapNetworkIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value to identify the network. This index value must correspond to
vcNetworkIndex from vcEnetNetworkTable."
	::= { vcProfileNetworkMapEntry 3 }


vcProfileFcFabricMapTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VcProfileFcFabricMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This table lists a mapping of profiles and associated ports.
The objective of this table is to provide a mechanism to 
access all Fabrics associated with a given vcProfile.
The second index to the table vcFcFabricIndex can be used
to access fabric information for a given fabric"
	::= { vcProfileFcFabricMap 1 }


vcProfileFcFabricMapEntry OBJECT-TYPE
	SYNTAX VcProfileFcFabricMapEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a single network."
	INDEX { vcProfileFcFabricMapProfileIndex , vcProfileFcFabricMapConnectionIndex }

	::= { vcProfileFcFabricMapTable 1 }

vcProfileFcFabricMapEntry ::=
	SEQUENCE {
		vcProfileFcFabricMapProfileIndex INTEGER,
		vcProfileFcFabricMapConnectionIndex INTEGER,
		vcProfileFcFabricMapFcFabricIndex INTEGER
		}

vcProfileFcFabricMapProfileIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for profile entry. This index value must correspond to
vcProfileIndex from vcProfileTable."
	::= { vcProfileFcFabricMapEntry 1 }


vcProfileFcFabricMapConnectionIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "FcFabric connection number associated with this mapping."
	::= { vcProfileFcFabricMapEntry 2 }


vcProfileFcFabricMapFcFabricIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Index value for vcFcFabric entry. This index value must correspond to
vcFcFabricIndex from vcFcFabricTable."
	::= { vcProfileFcFabricMapEntry 3 }


vcDomainMIBNotificationPrefix OBJECT IDENTIFIER ::= { vcDomainMIB 2 }

vcDomainMIBNotifications OBJECT IDENTIFIER ::= { vcDomainMIBNotificationPrefix 0 }

vcDomainMIBNotificationObjects OBJECT IDENTIFIER ::= { vcDomainMIBNotificationPrefix 1 }

vcDomainMIBConformance OBJECT IDENTIFIER ::= { vcDomainMIB 3 }

vcDomainMIBCompliances OBJECT IDENTIFIER ::= { vcDomainMIBConformance 1 }

vcDomainMIBGroups OBJECT IDENTIFIER ::= { vcDomainMIBConformance 2 }

vcDomainGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 1 }

vcEnclosureGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 2 }

vcModuleGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 3 }

vcPortGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 4 }

vcPhysicalServerGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 5 }

vcFcFabricGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 6 }

vcEnetNetworkGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 7 }

vcProfileGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 8 }

vcEnetNetworkVcPortMapGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 9 }

vcFcFabricVcPortMapGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 10 }

vcProfileNetworkMapGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 11 }

vcProfileFcFabricMapGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 12 }

vcManagedStatusNotificationsGroup OBJECT IDENTIFIER ::= { vcDomainMIBGroups 13 }

vcDomainManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcDomainManagedStatus }
DESCRIPTION "The summary managed status of the domain has changed."
	::= 1


vcCheckpointTimeout TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcDomainCheckpointValid, vcDomainLastCheckpointTime }
DESCRIPTION "The checkpoint valid status remained false for more than
five minutes."
	::= 2



vcCheckpointCompleted TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcDomainCheckpointValid }
DESCRIPTION "A checkpoint operation has completed following a checkpoint timeout
trap. The checkpoint valid status is true again. This trap is
not sent on every checkpoint completion, but only on a checkpoint
completion after a vcCheckpointTimeout trap has been sent."
	::= 3


vcEnetNetworkManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcEnetNetworkManagedStatus, vcEnetNetworkIndex }
DESCRIPTION "The managed status of network has changed."
	::= 4


vcFcFabricManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcFcFabricManagedStatus, vcFcFabricIndex }
DESCRIPTION "The managed status of VC FC Fabric has changed."
	::= 5


vcModuleManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcModuleManagedStatus, vcModuleIndex }
DESCRIPTION "The managed status of VC module has changed."
	::= 6


vcEnclosureManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcEnclosureManagedStatus, vcEnclosureIndex }
DESCRIPTION "The managed status of the enclosure has changed."
	::= 7


vcPhysicalServerManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcPhysicalServerManagedStatus, vcPhysicalServerIndex }
DESCRIPTION "The managed status of the server has changed."
	::= 8


vcProfileManagedStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcProfileManagedStatus, vcProfileIndex }
DESCRIPTION "The managed status of the profile has changed."
	::= 9


vcTestTrap TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcDomainName }
DESCRIPTION "A test trap for verifying trap configuration."
	::= 10


vcDomainStackingLinkRendundancyStatusChange TRAP-TYPE
	ENTERPRISE vcDomainMIBNotificationPrefix
	VARIABLES { vcDomainStackingLinkRedundant }
DESCRIPTION "The stacking link connection redundancy status has changed."
	::= 11


END

