#-MIBFILE: VMWARE-VMINFO-MIB.mib

VMWARE-VMINFO-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

VmwSubsystemTypes ::=
	INTEGER {
	unknown(1),
	chassis(2),
	powerSupply(3),
	fan(4),
	cpu(5),
	memory(6),
	battery(7),
	temperatureSensor(8),
	raidController(9),
	voltage(10)
	}

VmwSubsystemStatus ::=
	INTEGER {
	unknown(1),
	normal(2),
	marginal(3),
	critical(4),
	failed(5)
	}

VmwConnectedState ::=
	OCTET STRING (SIZE(7))

vmware OBJECT IDENTIFIER ::= { enterprises 6876 }
vmwVirtMachines OBJECT IDENTIFIER ::= { vmware 2 }
vmwTraps OBJECT IDENTIFIER ::= { vmware 50 }
vmwVirtMachines OBJECT IDENTIFIER ::= { vmware 2 }
vmwProductSpecific OBJECT IDENTIFIER ::= { vmware 4 }
vmwVmInfoMIB OBJECT IDENTIFIER ::= { vmwVirtMachines 10 }

vmwESX OBJECT IDENTIFIER ::= { vmwProductSpecific 3 }

vmwVmNotifications OBJECT IDENTIFIER ::= { vmwESX 0 }

vmwVmTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwVmEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table containing information on virtual machines that have been 
configured on the system."
	::= { vmwVirtMachines 1 }


vmwVmEntry OBJECT-TYPE
	SYNTAX VmwVmEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies a registered VM on this ESX system."
	INDEX { vmwVmIdx  }

	::= { vmwVmTable 1 }

vmwVmEntry ::=
	SEQUENCE {
		vmwVmIdx Integer32,
		vmwVmDisplayName DisplayString,
		vmwVmConfigFile DisplayString,
		vmwVmGuestOS DisplayString,
		vmwVmMemSize Integer32,
		vmwVmState DisplayString,
		vmwVmVMID Integer32,
		vmwVmGuestState DisplayString,
		vmwVmCpus Integer32
		}

vmwVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An operational identifier given the VM when registered on this ESX system.
The value is not unique across ESX systems and may change upon reboot.
VIM property: ha-vm-folder
MOB: https://esx.example.com/mob/?moid=ha%2dfolder%2dvm
A given Virtual Machine Instance can be queried using this URL:
MOB: https://esx.example.com/mob/?moid=vmwVmIdx"
	::= { vmwVmEntry 1 }


vmwVmDisplayName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Name by which this vm is displayed. It is not guaranteed to be unique.
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=summary%2eguest"
	::= { vmwVmEntry 2 }


vmwVmConfigFile OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Path to the configuration file for this vm expressed as a fully
qualified path name in POSIX or DOS extended format
VM Config file File name:
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2efiles
VM Datastore containing the filename:
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2edatastoreUrl"
	::= { vmwVmEntry 3 }


vmwVmGuestOS OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Operating system running on this vm. This value corresponds to the
value specified when creating the VM and unless set correctly may differ
from the actual OS running. Will return one of the values if set in order:
Vim.Vm.GuestInfo.guestFullName
Vim.Vm.GuestInfo.guestId
Vim.Vm.GuestInfo.guestFamily
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=guest 
where moid = vmwVmIdx.
If VMware Tools is not running, value will be of form 'E: error message'"
	::= { vmwVmEntry 4 }


vmwVmMemSize OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Memory configured for this virtual machine. 
Memory > MAX Integer32 is reported as max integer32.
VIM Property: memoryMB
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwVmEntry 5 }


vmwVmState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Power state of the virtual machine.
VIM Property: powerState
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=summary%2eruntime"
	::= { vmwVmEntry 6 }


vmwVmVMID OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Same value as vmwVmIdx, note that indexes in SMIv2 are not accessible.
https://esx.example.com/mob/?moid=vmwVmIdx"
	::= { vmwVmEntry 7 }


vmwVmGuestState OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Operation mode of guest operating system. Values include:
running  - Guest is running normally.
shuttingdown - Guest has a pending shutdown command.
resetting - Guest has a pending reset command.
standby - Guest has a pending standby command.
notrunning - Guest is not running.
unknown - Guest information is not available.
VIM Property: guestState
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=guest"
	::= { vmwVmEntry 8 }


vmwVmCpus OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Number of virtual CPUs assigned to this virtual machine.
VIM Property: numCPU 
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwVmEntry 9 }


vmwVmHbaTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwVmHbaEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of host bus adapters (hba) for all vms in vmwVmTable."
	::= { vmwVirtMachines 2 }


vmwVmHbaEntry OBJECT-TYPE
	SYNTAX VmwVmHbaEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Uniquely identifies a given virtual machine host bus adapter."
	INDEX { vmwHbaVmIdx , vmwVmHbaIdx }

	::= { vmwVmHbaTable 1 }

vmwVmHbaEntry ::=
	SEQUENCE {
		vmwHbaVmIdx Integer32,
		vmwVmHbaIdx Integer32,
		vmwHbaNum DisplayString,
		vmwHbaVirtDev DisplayString
		}

vmwHbaVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This number corresponds to the vmwVmIdx in vmwVmTable."
	::= { vmwVmHbaEntry 1 }


vmwVmHbaIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Uniquely identifies a given Host Bus adapter in this VM. May 
change across system reboots."
	::= { vmwVmHbaEntry 2 }


vmwHbaNum OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the hba as it appears in the VM Settings.
VIM Property: Virtual Device's with index of 200-299.
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwVmHbaEntry 3 }


vmwHbaVirtDev OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The oem host bus adapter hardware being emulated to the Guest OS.
MOB: Not visible."
	::= { vmwVmHbaEntry 4 }


vmwHbaTgtTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwHbaTgtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of all virtual disks configured for vms in vmwVmTable"
	::= { vmwVirtMachines 3 }


vmwHbaTgtEntry OBJECT-TYPE
	SYNTAX VmwHbaTgtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies a specific storage disk. Index may change across reboots."
	INDEX { vmwHbaTgtVmIdx , vmwHbaTgtIdx }

	::= { vmwHbaTgtTable 1 }

vmwHbaTgtEntry ::=
	SEQUENCE {
		vmwHbaTgtVmIdx Integer32,
		vmwHbaTgtIdx Integer32,
		vmwHbaTgtNum DisplayString
		}

vmwHbaTgtVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This number corresponds to vmwVmIdx in vmwVmTable."
	::= { vmwHbaTgtEntry 1 }


vmwHbaTgtIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This value identifies a particular disk."
	::= { vmwHbaTgtEntry 2 }


vmwHbaTgtNum OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies the disk as seen from the host bus controller
VIM Property: Virtual Device's with index of 3000-3999.
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwHbaTgtEntry 3 }


vmwVmNetTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwVmNetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of network adapters (nic) for all vms in vmwVmTable"
	::= { vmwVirtMachines 4 }


vmwVmNetEntry OBJECT-TYPE
	SYNTAX VmwVmNetEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies a particular nic for the specified vmwVmIdx"
	INDEX { vmwVmNetVmIdx , vmwVmNetIdx }

	::= { vmwVmNetTable 1 }

vmwVmNetEntry ::=
	SEQUENCE {
		vmwVmNetVmIdx Integer32,
		vmwVmNetIdx Integer32,
		vmwVmNetNum DisplayString,
		vmwVmNetName DisplayString,
		vmwVmNetConnType DisplayString,
		vmwVmNetConnected VmwConnectedState,
		vmwVmMAC PhysAddress
		}

vmwVmNetVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This number corresponds to vmwVmIdx in vmwVmTable."
	::= { vmwVmNetEntry 1 }


vmwVmNetIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies a unique network adapter in this table.
Not guaranteed to be the same across system reboots."
	::= { vmwVmNetEntry 2 }


vmwVmNetNum OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The name of the device as it appears in the VM Settings.
VIM Property: Virtual Device's with index of 4000-4999. 
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwVmNetEntry 3 }


vmwVmNetName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "What this virutal nic is connected to such as a virtual switch portgroup identifier.
VIM Property: Virtual Device's with index of 4000-4999. 
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware
then select property 'backing' to how this nic connects.
If unavailable, string will start with E:"
	::= { vmwVmNetEntry 4 }


vmwVmNetConnType OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS obsolete
	DESCRIPTION "Not to be used."
	::= { vmwVmNetEntry 5 }


vmwVmNetConnected OBJECT-TYPE
	SYNTAX VmwConnectedState
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reports 'true' if the ethernet virtual device is connected to the virtual machine."
	::= { vmwVmNetEntry 6 }


vmwVmMAC OBJECT-TYPE
	SYNTAX PhysAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reports the configured virtual hardware MAC address. 
If VMware Tools is not running, value is zero'd out/empty.
VIM Property: Virtual Device's with index of 4000-4999. 
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware"
	::= { vmwVmNetEntry 7 }


vmwFloppyTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwFloppyEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of floppy drives for all vms in vmwVmTable."
	::= { vmwVirtMachines 5 }


vmwFloppyEntry OBJECT-TYPE
	SYNTAX VmwFloppyEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies one specific floppy device. May change across system reboots."
	INDEX { vmwFdVmIdx , vmwFdIdx }

	::= { vmwFloppyTable 1 }

vmwFloppyEntry ::=
	SEQUENCE {
		vmwFdVmIdx Integer32,
		vmwFdIdx Integer32,
		vmwFdName DisplayString,
		vmwFdConnected VmwConnectedState
		}

vmwFdVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This number corresponds to vmwVmIdx in vmwVmTable."
	::= { vmwFloppyEntry 1 }


vmwFdIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies one specific virtual floppy device."
	::= { vmwFloppyEntry 2 }


vmwFdName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "File or Device that this device is connected to, example /dev/fd0.
VIM Property: Virtual Device's with index of 8000-8999. 
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware
If unavailable, string will start with E:"
	::= { vmwFloppyEntry 3 }


vmwFdConnected OBJECT-TYPE
	SYNTAX VmwConnectedState
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reports 'true' if the floppy drive virtual device is connected to the virtual machine."
	::= { vmwFloppyEntry 4 }


vmwCdromTable OBJECT-TYPE
	SYNTAX SEQUENCE OF VmwCdromEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Table of DVD or CDROM drives for all vms in vmwVmTable."
	::= { vmwVirtMachines 6 }


vmwCdromEntry OBJECT-TYPE
	SYNTAX VmwCdromEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies a specific DVD or CDROM drive. Value may change across system reboots."
	INDEX { vmwCdVmIdx , vmwCdromIdx }

	::= { vmwCdromTable 1 }

vmwCdromEntry ::=
	SEQUENCE {
		vmwCdVmIdx Integer32,
		vmwCdromIdx Integer32,
		vmwCdromName DisplayString,
		vmwCdromConnected VmwConnectedState
		}

vmwCdVmIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This number corresponds to the vmwVmIdx the vmwVmTable."
	::= { vmwCdromEntry 1 }


vmwCdromIdx OBJECT-TYPE
	SYNTAX INTEGER (0..65535)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Identifies the specific DVD or CDROM drive."
	::= { vmwCdromEntry 2 }


vmwCdromName OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reports the iso or device this virtual drive has been configured to use
VIM Property: Virtual Device's with index of 3000-3999 (same as disks)
MOB: https://esx.example.com/mob/?moid=vmwVmIdx&doPath=config%2ehardware
then select property 'backing' to how this cdrom connects.
If unavailable, string will start with E:"
	::= { vmwCdromEntry 3 }


vmwCdromConnected OBJECT-TYPE
	SYNTAX VmwConnectedState
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Reports true if the dvd/cdrom is connected to the virtual machine."
	::= { vmwCdromEntry 4 }


vmwVmID OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This holds the same value as vmwVmVMID of the affected vm generating the trap.
to allow polling of the affected vm in vmwVmTable."
	::= { vmwTraps 101 }


vmwVmConfigFilePath OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This is the config file of the affected vm generating the trap 
and is same as vmwVmTable vmwVmConfigFile."
	::= { vmwTraps 102 }


vmwVmInfoMIBConformance OBJECT IDENTIFIER ::= { vmwVmInfoMIB 2 }

vmwVmInfoMIBCompliances OBJECT IDENTIFIER ::= { vmwVmInfoMIBConformance 1 }

vmwVmInfoMIBGroups OBJECT IDENTIFIER ::= { vmwVmInfoMIBConformance 2 }

vmwVmInfoGroup OBJECT IDENTIFIER ::= { vmwVmInfoMIBGroups 1 }

vmwVmInfoNotificationGroup OBJECT IDENTIFIER ::= { vmwVmInfoMIBGroups 2 }

vmwVmObsoleteGroup OBJECT IDENTIFIER ::= { vmwVmInfoMIBGroups 3 }

vmwVmPoweredOn TRAP-TYPE
	ENTERPRISE vmwESX
	VARIABLES { vmwVmID, vmwVmConfigFilePath, vmwVmDisplayName }
DESCRIPTION "This trap is sent when a virtual machine is powered on from a suspended 
or a powered off state."
	::= 1


vmwVmPoweredOff TRAP-TYPE
	ENTERPRISE vmwESX
	VARIABLES { vmwVmID, vmwVmConfigFilePath, vmwVmDisplayName }
DESCRIPTION "This trap is sent when a virtual machine is powered off."
	::= 2


vmwVmHBLost TRAP-TYPE
	ENTERPRISE vmwESX
	VARIABLES { vmwVmID, vmwVmConfigFilePath, vmwVmDisplayName }
DESCRIPTION "This trap is sent when a virtual machine detects a loss in guest heartbeat."
	::= 3


vmwVmHBDetected TRAP-TYPE
	ENTERPRISE vmwESX
	VARIABLES { vmwVmID, vmwVmConfigFilePath, vmwVmDisplayName }
DESCRIPTION "This trap is sent when a virtual machine detects or regains the guest heartbeat."
	::= 4


vmwVmSuspended TRAP-TYPE
	ENTERPRISE vmwESX
	VARIABLES { vmwVmID, vmwVmConfigFilePath, vmwVmDisplayName }
DESCRIPTION "This trap is sent when a virtual machine is suspended."
	::= 5


END

